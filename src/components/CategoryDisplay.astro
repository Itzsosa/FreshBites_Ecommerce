---
// Import del tipo Category solamente, ya que cargaremos las categorías del lado del cliente
import type { Category } from '../services/categoryService';
---

<div class="categories-container mb-8">
  <h2 class="text-xl font-semibold text-gray-800 mb-4">Categorías</h2>
  
  <div id="categories-list">
    <p class="text-gray-600 italic">Cargando categorías...</p>
  </div>
</div>

<template id="category-template">
  <div class="category-card bg-white border border-gray-200 rounded-lg shadow-sm overflow-hidden hover:shadow-md transition-all hover:-translate-y-1 cursor-pointer">
    <div class="h-24 bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center p-2">
      <span class="text-white font-medium text-center category-name"></span>
    </div>
    <div class="p-2 text-center">
      <button class="text-sm text-blue-600 hover:text-blue-800 hover:underline">
        Ver productos
      </button>
    </div>
  </div>
</template>

<style>
  .category-card {
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }
</style>

<script>
  // Cargar categorías del localStorage cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', () => {
    const categoriesContainer = document.getElementById('categories-list');
    const template = document.getElementById('category-template');
    
    if (!categoriesContainer || !template) return;
    
    // Función para obtener categorías del localStorage
    function getCategories() {
      const categoriesStr = localStorage.getItem('categories');
      return categoriesStr ? JSON.parse(categoriesStr) : [];
    }
    
    const categories = getCategories();
    
    // Limpiar el contenedor
    categoriesContainer.innerHTML = '';
    
    if (categories.length === 0) {
      // Mostrar mensaje cuando no hay categorías
      categoriesContainer.innerHTML = '<p class="text-gray-600 italic">No hay categorías disponibles</p>';
    } else {
      // Crear contenedor de la cuadrícula
      const gridContainer = document.createElement('div');
      gridContainer.className = 'grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-3';
      categoriesContainer.appendChild(gridContainer);
      
      // Crear y agregar cada tarjeta de categoría
      categories.forEach(category => {
        const categoryNode = template.content.cloneNode(true);
        const nameElement = categoryNode.querySelector('.category-name');
        
        if (nameElement) {
          nameElement.textContent = category.name;
        }
        
        gridContainer.appendChild(categoryNode);
      });
    }
    
    // Depuración para verificar categorías
    console.log('Categorías cargadas:', categories);
  });
</script>