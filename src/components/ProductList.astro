---
import { Product } from '../services/productService';
import { Category, getCategoryById } from '../services/categoryService';

interface Props {
  products: Product[];
}

const { products } = Astro.props;

// Función para formatear el precio
const formatPrice = (price: number) => {
  return new Intl.NumberFormat('es-CR', {
    style: 'currency',
    currency: 'CRC'
  }).format(price);
};

// Función para obtener el nombre de la categoría
const getCategoryName = (categoryId: string) => {
  const category = getCategoryById(categoryId);
  return category ? category.name : 'Categoría no encontrada';
};
---

<div class="bg-white rounded-lg shadow-md p-6">
  <h2 class="text-xl font-semibold text-gray-800 mb-4">Lista de Productos</h2>
  
  {products.length === 0 ? (
    <div class="text-center py-4 text-gray-500">
      No hay productos registrados. ¡Crea tu primer producto!
    </div>
  ) : (
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Producto
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Precio
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Categoría
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Acciones
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          {products.map((product) => (
            <tr class="hover:bg-gray-50" id={`product-${product.id}`}>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="flex items-center">
                  <div class="h-10 w-10 flex-shrink-0">
                    {product.imageBase64 ? (
                      <img class="h-10 w-10 rounded-full object-cover" src={product.imageBase64} alt={product.name} />
                    ) : (
                      <div class="h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center">
                        <span class="text-gray-500 text-xs">Sin img</span>
                      </div>
                    )}
                  </div>
                  <div class="ml-4">
                    <div class="text-sm font-medium text-gray-900">
                      {product.name}
                    </div>
                    {product.description && (
                      <div class="text-sm text-gray-500 truncate max-w-xs">
                        {product.description}
                      </div>
                    )}
                  </div>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-900">{formatPrice(product.price)}</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                  {getCategoryName(product.categoryId)}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                <button
                  class="text-blue-600 hover:text-blue-900 mr-3 edit-product"
                  data-id={product.id}
                >
                  Editar
                </button>
                <button
                  class="text-red-600 hover:text-red-900 delete-product"
                  data-id={product.id}
                >
                  Eliminar
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  )}
  
  <!-- Modal de Confirmación para Eliminar -->
  <div id="deleteModal" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center p-4 z-50">
    <div class="bg-white rounded-lg max-w-md w-full p-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Confirmar Eliminación</h3>
      <p class="text-sm text-gray-500 mb-4">
        ¿Estás seguro de que deseas eliminar este producto? Esta acción no se puede deshacer.
      </p>
      <div class="flex justify-end">
        <button
          id="cancelDelete"
          class="mr-2 px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
        >
          Cancelar
        </button>
        <button
          id="confirmDelete"
          class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700"
        >
          Eliminar
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  // La lógica principal se manejará desde la página products.astro
</script>